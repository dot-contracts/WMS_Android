// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using wms_android.data.Data;

#nullable disable

namespace wms_android.data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241216030411_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("wms_android.data.Models.Drivers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Initials")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Drivers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a368177a-1e28-41fe-9c76-7516cb4cdc4a"),
                            FirstName = "John",
                            Initials = "JN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("14095293-1189-4e88-b018-bb3a4cf382de"),
                            FirstName = "Robert",
                            Initials = "RN",
                            LastName = "Njuguna",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("7859e4a0-9ec4-43c1-95be-33a28156d129"),
                            FirstName = "John",
                            Initials = "JM",
                            LastName = "Mwai",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("e2e48262-46da-463f-8ae3-00a10b95f58f"),
                            FirstName = "David",
                            Initials = "DM",
                            LastName = "Mwangi",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("1af35b07-6e2a-43a6-be20-56ca5b0396fe"),
                            FirstName = "David",
                            Initials = "DK",
                            LastName = "Kibet",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("5131d676-47cc-479b-9f4d-aadd65f32501"),
                            FirstName = "Erastus",
                            Initials = "EK",
                            LastName = "Kagwa",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("41f27fb1-e341-491b-a70c-73f26b55223f"),
                            FirstName = "Julius",
                            Initials = "JK",
                            LastName = "Kamula",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("07b40d8d-5b84-4365-aeb2-72f033cc2eb3"),
                            FirstName = "Stephen",
                            Initials = "SK",
                            LastName = "Kimuyu",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("3dad3867-d0e4-4532-835b-f18161c0efd6"),
                            FirstName = "Charles",
                            Initials = "SK",
                            LastName = "Maina",
                            LicenseNumber = "DL123456"
                        },
                        new
                        {
                            Id = new Guid("940948c2-2591-4094-93d0-d9a3a3c89820"),
                            FirstName = "James",
                            Initials = "SK",
                            LastName = "Gichohi",
                            LicenseNumber = "DL123456"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.Parcel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("DispatchTrackingCode")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DispatchedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("PaymentMethods")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("QRCode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<decimal>("Rate")
                        .HasColumnType("numeric");

                    b.Property<string>("Receiver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ReceiverTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Sender")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SenderTelephone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("numeric");

                    b.Property<decimal>("TotalRate")
                        .HasColumnType("numeric");

                    b.Property<string>("WaybillNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Parcels");
                });

            modelBuilder.Entity("wms_android.data.Models.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Administrator",
                            Name = "Admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Manager",
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Regular User",
                            Name = "Clerk"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Client User",
                            Name = "Client"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "admin@example.com",
                            Password = "admin123",
                            PasswordHash = new byte[] { 218, 255, 159, 96, 88, 199, 214, 9, 132, 118, 127, 30, 161, 11, 246, 133, 234, 34, 211, 73, 96, 136, 23, 201, 95, 50, 218, 251, 117, 46, 125, 226, 107, 80, 95, 90, 227, 170, 69, 5, 0, 214, 187, 63, 141, 208, 117, 21, 142, 123, 135, 223, 69, 184, 142, 124, 67, 111, 201, 25, 3, 188, 182, 149 },
                            PasswordSalt = new byte[] { 222, 160, 245, 218, 72, 237, 145, 87, 252, 59, 38, 195, 109, 16, 72, 199, 167, 150, 232, 71, 189, 180, 63, 94, 149, 144, 231, 177, 18, 127, 57, 59, 225, 7, 131, 46, 105, 132, 115, 85, 129, 125, 227, 116, 102, 79, 109, 10, 225, 157, 115, 43, 144, 76, 188, 38, 212, 26, 234, 249, 209, 194, 210, 109, 55, 214, 25, 186, 50, 13, 138, 111, 201, 97, 114, 188, 84, 185, 105, 234, 216, 250, 99, 54, 65, 68, 123, 191, 130, 119, 30, 79, 239, 155, 59, 58, 250, 119, 64, 24, 253, 24, 174, 231, 199, 139, 67, 146, 107, 60, 189, 147, 214, 221, 208, 61, 134, 207, 236, 129, 3, 168, 141, 209, 188, 93, 118, 180 },
                            RoleId = 1,
                            Username = "admin"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "manager@example.com",
                            Password = "manager123",
                            PasswordHash = new byte[] { 218, 255, 159, 96, 88, 199, 214, 9, 132, 118, 127, 30, 161, 11, 246, 133, 234, 34, 211, 73, 96, 136, 23, 201, 95, 50, 218, 251, 117, 46, 125, 226, 107, 80, 95, 90, 227, 170, 69, 5, 0, 214, 187, 63, 141, 208, 117, 21, 142, 123, 135, 223, 69, 184, 142, 124, 67, 111, 201, 25, 3, 188, 182, 149 },
                            PasswordSalt = new byte[] { 222, 160, 245, 218, 72, 237, 145, 87, 252, 59, 38, 195, 109, 16, 72, 199, 167, 150, 232, 71, 189, 180, 63, 94, 149, 144, 231, 177, 18, 127, 57, 59, 225, 7, 131, 46, 105, 132, 115, 85, 129, 125, 227, 116, 102, 79, 109, 10, 225, 157, 115, 43, 144, 76, 188, 38, 212, 26, 234, 249, 209, 194, 210, 109, 55, 214, 25, 186, 50, 13, 138, 111, 201, 97, 114, 188, 84, 185, 105, 234, 216, 250, 99, 54, 65, 68, 123, 191, 130, 119, 30, 79, 239, 155, 59, 58, 250, 119, 64, 24, 253, 24, 174, 231, 199, 139, 67, 146, 107, 60, 189, 147, 214, 221, 208, 61, 134, 207, 236, 129, 3, 168, 141, 209, 188, 93, 118, 180 },
                            RoleId = 2,
                            Username = "manager"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "clerk1@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 218, 255, 159, 96, 88, 199, 214, 9, 132, 118, 127, 30, 161, 11, 246, 133, 234, 34, 211, 73, 96, 136, 23, 201, 95, 50, 218, 251, 117, 46, 125, 226, 107, 80, 95, 90, 227, 170, 69, 5, 0, 214, 187, 63, 141, 208, 117, 21, 142, 123, 135, 223, 69, 184, 142, 124, 67, 111, 201, 25, 3, 188, 182, 149 },
                            PasswordSalt = new byte[] { 222, 160, 245, 218, 72, 237, 145, 87, 252, 59, 38, 195, 109, 16, 72, 199, 167, 150, 232, 71, 189, 180, 63, 94, 149, 144, 231, 177, 18, 127, 57, 59, 225, 7, 131, 46, 105, 132, 115, 85, 129, 125, 227, 116, 102, 79, 109, 10, 225, 157, 115, 43, 144, 76, 188, 38, 212, 26, 234, 249, 209, 194, 210, 109, 55, 214, 25, 186, 50, 13, 138, 111, 201, 97, 114, 188, 84, 185, 105, 234, 216, 250, 99, 54, 65, 68, 123, 191, 130, 119, 30, 79, 239, 155, 59, 58, 250, 119, 64, 24, 253, 24, 174, 231, 199, 139, 67, 146, 107, 60, 189, 147, 214, 221, 208, 61, 134, 207, 236, 129, 3, 168, 141, 209, 188, 93, 118, 180 },
                            RoleId = 3,
                            Username = "clerk1"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "clerk2@example.com",
                            Password = "clerk123",
                            PasswordHash = new byte[] { 218, 255, 159, 96, 88, 199, 214, 9, 132, 118, 127, 30, 161, 11, 246, 133, 234, 34, 211, 73, 96, 136, 23, 201, 95, 50, 218, 251, 117, 46, 125, 226, 107, 80, 95, 90, 227, 170, 69, 5, 0, 214, 187, 63, 141, 208, 117, 21, 142, 123, 135, 223, 69, 184, 142, 124, 67, 111, 201, 25, 3, 188, 182, 149 },
                            PasswordSalt = new byte[] { 222, 160, 245, 218, 72, 237, 145, 87, 252, 59, 38, 195, 109, 16, 72, 199, 167, 150, 232, 71, 189, 180, 63, 94, 149, 144, 231, 177, 18, 127, 57, 59, 225, 7, 131, 46, 105, 132, 115, 85, 129, 125, 227, 116, 102, 79, 109, 10, 225, 157, 115, 43, 144, 76, 188, 38, 212, 26, 234, 249, 209, 194, 210, 109, 55, 214, 25, 186, 50, 13, 138, 111, 201, 97, 114, 188, 84, 185, 105, 234, 216, 250, 99, 54, 65, 68, 123, 191, 130, 119, 30, 79, 239, 155, 59, 58, 250, 119, 64, 24, 253, 24, 174, 231, 199, 139, 67, 146, 107, 60, 189, 147, 214, 221, 208, 61, 134, 207, 236, 129, 3, 168, 141, 209, 188, 93, 118, 180 },
                            RoleId = 3,
                            Username = "clerk2"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2023, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Email = "client1@example.com",
                            Password = "client123",
                            PasswordHash = new byte[] { 218, 255, 159, 96, 88, 199, 214, 9, 132, 118, 127, 30, 161, 11, 246, 133, 234, 34, 211, 73, 96, 136, 23, 201, 95, 50, 218, 251, 117, 46, 125, 226, 107, 80, 95, 90, 227, 170, 69, 5, 0, 214, 187, 63, 141, 208, 117, 21, 142, 123, 135, 223, 69, 184, 142, 124, 67, 111, 201, 25, 3, 188, 182, 149 },
                            PasswordSalt = new byte[] { 222, 160, 245, 218, 72, 237, 145, 87, 252, 59, 38, 195, 109, 16, 72, 199, 167, 150, 232, 71, 189, 180, 63, 94, 149, 144, 231, 177, 18, 127, 57, 59, 225, 7, 131, 46, 105, 132, 115, 85, 129, 125, 227, 116, 102, 79, 109, 10, 225, 157, 115, 43, 144, 76, 188, 38, 212, 26, 234, 249, 209, 194, 210, 109, 55, 214, 25, 186, 50, 13, 138, 111, 201, 97, 114, 188, 84, 185, 105, 234, 216, 250, 99, 54, 65, 68, 123, 191, 130, 119, 30, 79, 239, 155, 59, 58, 250, 119, 64, 24, 253, 24, 174, 231, 199, 139, 67, 146, 107, 60, 189, 147, 214, 221, 208, 61, 134, 207, 236, 129, 3, 168, 141, 209, 188, 93, 118, 180 },
                            RoleId = 4,
                            Username = "client1"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("BodyType")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("VehicleRegistrationNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0de54a86-2585-41ad-823b-889f69a98c61"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDL 085M"
                        },
                        new
                        {
                            Id = new Guid("c429e52c-cdfb-40be-8343-1b4c1588a468"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCY 067A"
                        },
                        new
                        {
                            Id = new Guid("db52f6d4-b762-4d72-9eba-de293e6d320d"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KCZ 595L"
                        },
                        new
                        {
                            Id = new Guid("87f19bcc-b830-4e27-b616-eb6543ac3eac"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDB 387Q"
                        },
                        new
                        {
                            Id = new Guid("94582076-4dad-4c50-8e8d-84e220142e87"),
                            BodyType = "Truck",
                            VehicleRegistrationNumber = "KDE 228S"
                        },
                        new
                        {
                            Id = new Guid("bf8b6d86-53b0-47c3-b3e6-1c81d84e5834"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KAY 215H"
                        },
                        new
                        {
                            Id = new Guid("5b0b3cb3-f778-4a34-82fe-a8857d188724"),
                            BodyType = "Van",
                            VehicleRegistrationNumber = "KBF 462A"
                        });
                });

            modelBuilder.Entity("wms_android.data.Models.User", b =>
                {
                    b.HasOne("wms_android.data.Models.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });
#pragma warning restore 612, 618
        }
    }
}
